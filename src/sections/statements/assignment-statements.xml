<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="section.assignment-statements"
    xmlns:xi="http://www.w3.org/2001/XInclude" >
    <info>
        <title>Assignment Statements</title>
    </info>
    
    <para>
        The main difference between variables in programming and variables you've used in math 
        classes is that you can change the values variables hold. In Java, this is done 
        using an assignment statement. Assignment statements may be a little confusing
        since they use the equals operator, even though this is not an equation! There 
        are two distinct parts to an assignment statement: on the left is an identifier for 
        the variable you want to make an assignment to, and on the right is an expression 
        which yields the value you want to assign to the variable. 
    </para>
    
    <xi:include href="../../examples/assignment-simple.xml"/>
    
    <para> 
        <termdef xml:id="term.initialization">
            When a variable is assigned its first (initial) value, we say that the variable has been        <firstterm>initialized</firstterm>.
        </termdef>
    </para>
    
    
    <para>
        Variables must be initialized before they can be used in another part of a program, and variables must be declared before they 
        can be initialized, however variables can be declared and initialized in a single statement. It's also not always necessary
        to provide a type in a declaration. The example below walks you through the relevant Java syntax:
    </para>
    
    <xi:include href="../../examples/assignment-and-declaration-statement.xml"/>
    
</section>
