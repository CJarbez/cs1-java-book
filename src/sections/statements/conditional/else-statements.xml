<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="section.expressions"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <info>
        <title>Else Statements</title>
    </info>
        <para>Conditional expressions provided a value whether our boolean expression evaluated to <literal>true</literal> <emphasis>or</emphasis> <literal>false</literal>. We can similarly provide an alternative block of statements we want executed if the boolean expression used in our if statement evaluates to false by using an <code>else</code> statement. Else statements look exactly like if statements but must immediately follow the end of the if statement. 
        </para>  
 <example>  
     <title>Implementing Absolute Value with if/else</title>
         <para>Recall the <varname>abs</varname> method from the <varname>Math</varname> class that determined the absolute value of a number. In this example, we'll write our own absolute valued method that does the exact same thing using an <code>if</code> and an <code>else</code> statement. We'll name this method <varname>myAbs</varname> to make it distinct:
        </para>
        <programlisting>
<xi:include href="../../../examples/code/myAbs.jsh" parse="text/plain"/>
        </programlisting>
    <para>If <varname>x</varname> is greater than <literal>0</literal>, the first if statement will execute, meaning that the value stored in <varname>x</varname> will be returned. If <varname>x</varname> is not greater than zero, the return statement inside the <code>else</code> block will execute instead, meaning that the negation of the value stored in <varname>x</varname> will be returned. Note that <literal>-0</literal> is returned when <varname>x</varname> is stores the value <literal>0</literal>, but since these two values are equivalent, it doesn't make a difference. Also note that the return statement is still always the last statement executed, no matter what the value of <varname>x</varname> is. </para>
    </example>
</section>
