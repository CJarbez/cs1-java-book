<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="section.break-statements"
    xmlns:xi="http://www.w3.org/2001/XInclude" >
    <info>
        <title>Break Statements</title>
    </info>

    <para>Loops don't need to be terminated only when the loop condition becomes false. A loop can be terminated early by using a <firstterm>break statement</firstterm> inside of the loop. When a <code>break</code> statement is encountered, the enclosing loop will immediately terminate and execution will resume just after the closing brace of the
      loop.
    </para>

    <para><code>break</code> statements are very simple. They consist of just a single keyword (<code>break</code>) followed by a semicolon:
  </para>
  <programlisting>
    break;
  </programlisting>
    <para>You will use <code>break</code> statements within an <code>if</code> statement since you will only want to terminate the loop early because of some other condition that arises. You may want to use a break statement if an error occurs that must be processed. You can also intentionally begin an infinite loop (set the loop condition to <literal>true</literal>) and use break statements to end the loop. </para>


  <example><title>Searching for Values in an Array</title>
    <para>
      The following code will search through an array <varname>arr</varname> for the number <literal>13</literal>:
    </para>
    <programlisting>
int i=0;
for(; i&lt; arr.length; i++) {
  if(arr[i] == 13) {
    break;
  }
}
    </programlisting>
      <para>When this snippet of code completes executing, <varname>i</varname> will be the index for <varname>arr</varname> where the value <literal>13</literal> is located (or it will be <code>arr.length</code> if <literal>13</literal> doesn't appear in <varname>arr</varname>).
      </para>
  </example>

</section>
