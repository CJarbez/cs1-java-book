<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="section.assignment-statements"
    xmlns:xi="http://www.w3.org/2001/XInclude" >
    <info>
        <title>Assignment Statements</title>
    </info>
    
    The main difference between variables in programming and variables you've used in math classes is that you can change the values variables hold. In Java, this is done 
    using an assignment statement. Assignment statements may be a little confusing
    since they use the equals operator, even though this is not an equation! There 
    are two distinct parts to an assignment statement: on the left is an identifier for 
    the variable you want to make an assignment to, and on the right is an expression 
    which yields the value you want to assign to the variable. 
    
    \begin{exa}
    For example, the following assignment statement will assign the value 5 to the variable
    x:
    
    \begin{code}
    x = 5;
    \end{code}
    \end{exa}
    
    \begin{exa}
    The following assignment statement will also assign the value 5 to the variable
    x, but uses a more complex expression to do it:
    
    \begin{code}
    x = 2 + 3;
    \end{code}
    \end{exa}
    
    Note that, just as in variable expressions, it is required that a variable is
    declared before it can be used on the left-hand side of an assignment statement. 
    Using an undeclared variable in this way will result in an error. 
    
    \begin{exa}
    Note: it is possible to both declare and assign a value to a variable in one 
    combined statement. The following declares the new variable y and assigns the value 34
    to it:
    \begin{code}
    int y = 34;
    \end{code}
    \end{exa}
    
</section>