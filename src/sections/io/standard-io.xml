<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="section.numeric-literal-expressions"
    xmlns:xi="http://www.w3.org/2001/XInclude" >
    <info>
        <title>Standard Input / Output</title>
    </info>
    
<para>The programs you write will need to be able to interact with a user and thus requires some sort of <firstterm>user interface</firstterm>. A text-based user interface (or command-line interface) is a very simple and straight forward way to start interacting with the users of your programs by printing information to the screen for the user in text format and taking in data when the user types something at the keyboard. JShell is an excellent example of a program that uses text-based user interface. This was a very popular style of application on older computer systems in the 90's and earlier but has remained relevant and has perhaps even gained popularity more recently. 
</para>
    <para>Now that you've had experience with characters and strings, you can use these datatypes to send messages back and forth with the user.
    </para>
    
    <section>
        <title>Reading from Standard Input</title>
        <para>
            A text-based application writes to <firstterm>standard output</firstterm> to communicate something to the user. You've already seen how to do this in the "Hello World!" example by using <varname>System.out.println</varname>. What you haven't seen yet is how to receive a response from the user while your program is running. This chapter will introduce <varname>Scanner</varname> objects which allow you to read messages from <firstterm>standard input</firstterm>.
        </para>
        
        <!-- TODO: explain how to create a scanner -->
        <!-- TODO: copycat example -->
    </section>
    
    
    <!-- TODO: explain how to convert Strings to ints -->
    <!-- TODO: interactive addition example -->
</section>
