<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="section.numeric-literal-expressions"
    xmlns:xi="http://www.w3.org/2001/XInclude" >
    <info>
        <title>Numeric Literal Expressions</title>
    </info>
    
    <para>
    Literal expressions are the most simple expressions in Java. The expression you type 
    in is literally the value you get back. For instance, the expression 5 evaluates to, 
    wait for it...,  5.  
    </para>
    
    <para>
    One catch is that there is more than one type of numeric value in Java! 5 is an example
    of what is called an integer (shortened to int in Java). There are some constraints on the size of an integer (the minimum value is âˆ’2147483648 or $-2^{31}$ and the maximum
    value is $2^{32}-1$ or 2147483648). There are different integer types with different sizes. For instance, 
    the type long has a range of $-2^{63}$ to $-2^{63}$ There are also the lesser used short and byte 
    integer types, but we won't work with these specifically (this semester). 
    </para>
    
    <para>
    Note that you can specify you want to create a long value using a special syntax for 
    the literal expression. For instance, 46L is a legal expression that evaluates to 
    the long integer value 46. 
    </para>
    
    <para>
    9.2 is an example of a floating point value. These are values with a decimal 
    component. Like integer values, there is more than one floating point type in Java 
    (single and double precision). By default, the literal expressions you type in that 
    contain a decimal point will be of type double (float is the other legal type name).
    </para>
    
    <para>
    Internally, these values are stored in the same way you've used scientific notation. Each floating point value consists of two components: an exponent and a mantissa. The value is determined by multiplying the mantissa by 10 to the power 
    of the exponent. 
    </para>
    
    <para>
    There is a format for literal values that uses scientific notation using the letter E between these two components. For instance, 5E3 is the same as $5000.0$. 
    </para>
</section>
