<example xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ex.assignment-and-declaration-statement"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Declaring and Initializing a Variable with a Single Statement</title>
    
    <para>
        The following declares a new variable named <varname>y</varname> of type <type>int</type> and assigns 
        the value <literal>34</literal>to it:
    </para>
    
    <programlisting>
<xi:include href="code/assignment-and-declaration-statement1.jsh" parse="text/plain"/>
    </programlisting>
    
    <para>
        Since Java 10, it is also unnecessary to provide the variable type in an assignment statement if you are initializing it 
        with the same statement. Instead of giving a type, you can instead use the <command>var</command> keyword in its place. 
        Since the variable is being initialized on the same line, Java can infer what the type of the variable should be from the 
        type of value being assigned to it. The following code produces the exact same result as the previous example: a variable named 
        <varname>y</varname> of type <type>int</type> initialized to the value <literal>34</literal>:
    </para>
    
    <programlisting>
<xi:include href="code/assignment-and-declaration-statement2.jsh" parse="text/plain"/>
    </programlisting>
    
    <para>
        Throughout this book we will use the <command>var</command> keyword wherever possible in our variable definitions. However, there are cases where 
        a type must be explicitly provided in a variable definition, and we will make special note of those cases. 
    </para>
</example>
